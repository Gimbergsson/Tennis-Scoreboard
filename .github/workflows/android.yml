name: Android CI

on:
  push:
    branches:
      - release/*
  workflow_dispatch:
  
jobs:
  apk:
    name: Generate release builds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Clear Gradle cache
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-
    
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Generate apikey.properties
      run: |
          cat <<EOF > apikey.properties
          APPWRITE_PROJECT_ID:"${{ vars.APPWRITE_PROJECT_ID }}"
          APPWRITE_API_KEY:"${{ secrets.APPWRITE_API_KEY }}"
          EOF
    
    - name: Generate keystore.properties
      run: |
          cat <<EOF > keystore.properties
          KEYSTORE_PASSWORD:${{ secrets.KEYSTORE_STORE_PASSWORD }}
          KEYSTORE_KEY_PASSWORD:${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_KEY_ALIAS:${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_FILE_PATH:${{ vars.KEYSTORE_STORE_FILE_PATH }}
          EOF
    
    - name: Decode keystore and create jks
      run: echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > androidos/keystore.jks

    - name: Print file path
      run: |
        echo "The path of keystore.jks is:"
        pwd
        ls -la
    
    - name: Generate file name env var
      run: |
          VERSION_NAME=$(${{github.workspace}}/gradlew -q printVersionName)
          MESSAGE=$(cat << EOF
          tennis-scoreboard-${VERSION_NAME}
          EOF)
          echo OUTPUT_NAME=$MESSAGE >> $GITHUB_ENV

    - name: Build Android OS release APK
      run: bash ./gradlew androidos:assembleRelease --stacktrace

    - name: Rename APK 
      run: |
        pwd
        ls -la
        ls -la ./androidos/build
        ls -la ./androidos/build/outputs
        ls -la ./androidos/build/outputs/apk
        ls -la ./androidos/build/outputs/apk/release
        mv "androidos/build/outputs/apk/release/androidos-release.apk" "androidos/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk"

    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}
        path: app/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk
    
    - name: Build Android OS release AAB
      run: bash ./gradlew androidos:bundleRelease --stacktrace

    - name: Rename AAB 
      run:
        mv "./androidos/build/outputs/bundle/release/androidos-release.aab" "./androidos/build/outputs/bundle/release/${{ env.OUTPUT_NAME }}.aab"
      
    - name: Upload debug AAB
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}
        path: androidos/build/outputs/bundle/release/${{ env.OUTPUT_NAME }}.aab

    - name: Publish to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
         serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
         packageName: se.dennisgimbergsson.tennisscoreboard
         releaseFiles: androidos/build/outputs/bundle/release/${{ env.OUTPUT_NAME }}.aab
         track: qa
